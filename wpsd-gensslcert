#!/bin/bash
#
#############################################################
#                                                           #
#             WPSD Self-Signed SSL Cert. Gen.               #
#                                                           #
#############################################################
#
if [ "$(id -u)" != "0" ]; then
	echo -e "You need to be root to run this command...\n"
	exit 1
fi

exec 200>/var/lock/wpsd-ssl.lock || exit 1
if ! flock -n 200 ; then
	echo -e "Another instance is already running...\n"
	exit 1
fi

# Option to force re-generaton, cert only lives for 1 year
if [ "$1" == "force" ]; then
	rm -rf /etc/ssl/certs/wpsd.crt
fi

# If the self-signed cert doesnt exist - create it.
if [ ! -f /etc/ssl/certs/wpsd.crt ]; then
	getFQDN=$( hostname -A | cut -d " " -f1 )
	# Create the new Private / Public keys
	openssl req -x509 -nodes -days 3650 -newkey rsa:4096 -keyout /etc/ssl/private/wpsd.key -out /etc/ssl/certs/wpsd.crt \
	  -subj "/C=US/ST=Minnesota/L=Winona/O=WPSD Project/OU=WPSD Dev Team/CN=wpsd" \
	  -addext "subjectAltName=DNS:wpsd,DNS:wpsd.local,DNS:pi-star,DNS:pi-star.local,DNS:pi-star*,DNS:pi-star*.local,DNS:${getFQDN},DNS:$(hostname).local,DNS:$(hostname)"

	# Configure NginX
	cat << 'EOF' > /etc/nginx/sites-enabled/pi-star
server {
	listen 80 default_server;
	listen 443 ssl http2;
	root /var/www/dashboard;

	ssl_certificate /etc/ssl/certs/wpsd.crt;
	ssl_certificate_key /etc/ssl/private/wpsd.key;
	ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

	location ^~ /admin {
	try_files $uri $uri/ =404;
		auth_basic "Restricted";
		auth_basic_user_file /var/www/.htpasswd;
		client_max_body_size 512K;

		# Load the defaults
		include	/etc/nginx/default.d/php.conf;
	}

	location ~ /\.git {
		deny all;
	}

	# Load the defaults
	include	/etc/nginx/default.d/*.conf;
}
EOF

	# Restart NginX with the new config.
	systemctl restart nginx
	echo -e "SSL enabled. You will need to refresh the WPSD dashboard and add/accept the new self-signed certificate to your web browser."

fi
